# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤
Write-Host "üöÄ –ó–∞–ø—É—Å–∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
try {
    docker --version | Out-Null
    Write-Host "‚úÖ Docker –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω!" -ForegroundColor Red
    exit 1
}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
Write-Host "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..." -ForegroundColor Yellow
docker-compose -f app/docker/docker-compose.yml down 2>$null

# –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
Write-Host "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..." -ForegroundColor Yellow
docker-compose -f app/docker/docker-compose.yml up -d

if ($LASTEXITCODE -ne 0) {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤!" -ForegroundColor Red
    exit 1
}

# –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
Write-Host "‚è≥ –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..." -ForegroundColor Yellow
Start-Sleep -Seconds 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
Write-Host "`nüìã –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:" -ForegroundColor Yellow
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º health status
Write-Host "`nüè• –ü—Ä–æ–≤–µ—Ä–∫–∞ health status:" -ForegroundColor Yellow

$containers = @("media-processor-main", "media-processor-converter", "media-processor-transcription")
$healthyCount = 0

foreach ($container in $containers) {
    try {
        $health = docker inspect --format='{{.State.Health.Status}}' $container 2>$null
        if ($health) {
            switch ($health) {
                "healthy" { 
                    Write-Host "‚úÖ $container - –ó–¥–æ—Ä–æ–≤" -ForegroundColor Green
                    $healthyCount++
                }
                "unhealthy" { Write-Host "‚ùå $container - –ù–µ –∑–¥–æ—Ä–æ–≤" -ForegroundColor Red }
                "starting" { Write-Host "üîÑ $container - –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è" -ForegroundColor Yellow }
                default { Write-Host "‚ùì $container - $health" -ForegroundColor Gray }
            }
        } else {
            Write-Host "‚ö†Ô∏è $container - Health check –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω" -ForegroundColor Yellow
        }
    } catch {
        Write-Host "‚ùå $container - –ù–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    }
}

Write-Host "`nüéØ –†–µ–∑—É–ª—å—Ç–∞—Ç:" -ForegroundColor Yellow
if ($healthyCount -eq $containers.Count) {
    Write-Host "üéâ –í—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω—ã –∏ –∑–¥–æ—Ä–æ–≤—ã!" -ForegroundColor Green
    Write-Host "üåê –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:8000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ" -ForegroundColor Cyan
} else {
    Write-Host "‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ –≥–æ—Ç–æ–≤—ã" -ForegroundColor Yellow
    Write-Host "üìã –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏: ./scripts/check-docker.ps1" -ForegroundColor Cyan
}

Write-Host "üìã –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏: ./scripts/docker-stop.ps1" -ForegroundColor Cyan
