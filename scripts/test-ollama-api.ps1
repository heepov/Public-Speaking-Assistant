# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Ollama API —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –º–æ–¥–µ–ª—è–º–∏

Write-Host "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Ollama API" -ForegroundColor Green
Write-Host "=" * 50

# –ë–∞–∑–æ–≤—ã–π URL API
$baseUrl = "http://localhost:8004"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
function Test-APIHealth {
    try {
        $response = Invoke-RestMethod -Uri "$baseUrl/health" -Method GET -TimeoutSec 5
        Write-Host "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
        return $true
    } catch {
        Write-Host "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –º–æ–¥–µ–ª–µ–π
function Get-Models {
    try {
        $response = Invoke-RestMethod -Uri "$baseUrl/models" -Method GET -TimeoutSec 10
        Write-Host "üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏: $($response.models -join ', ')" -ForegroundColor Cyan
        return $response.models
    } catch {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π: $($_.Exception.Message)" -ForegroundColor Red
        return @()
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏
function Install-Model {
    param([string]$ModelName)
    
    Write-Host "üì• –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–¥–µ–ª—å: $ModelName" -ForegroundColor Yellow
    
    try {
        $body = @{
            model_name = $ModelName
        }
        
        $response = Invoke-RestMethod -Uri "$baseUrl/models/install" -Method POST -Form $body -TimeoutSec 300
        Write-Host "‚úÖ –ú–æ–¥–µ–ª—å $ModelName —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: $($response.message)" -ForegroundColor Green
        return $true
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–¥–µ–ª–∏ $ModelName : $($_.Exception.Message)" -ForegroundColor Red
        return $false
    }
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç–µ–∫—Å—Ç–∞
function Process-Text {
    param(
        [string]$Prompt,
        [string]$ModelName = "llama2",
        [string]$TaskId = "test-$(Get-Date -Format 'yyyyMMdd-HHmmss')"
    )
    
    Write-Host "üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç —Å –º–æ–¥–µ–ª—å—é $ModelName..." -ForegroundColor Yellow
    Write-Host "üí¨ –ü—Ä–æ–º–ø—Ç: $Prompt" -ForegroundColor Gray
    
    try {
        $body = @{
            prompt = $Prompt
            task_id = $TaskId
            model_name = $ModelName
            use_openai = $false
        }
        
        $response = Invoke-RestMethod -Uri "$baseUrl/process" -Method POST -Form $body -TimeoutSec 120
        Write-Host "‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞" -ForegroundColor Green
        Write-Host "üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç: $($response.result)" -ForegroundColor Cyan
        return $response
    } catch {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: $($_.Exception.Message)" -ForegroundColor Red
        return $null
    }
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ—Å—Ç
Write-Host "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API..." -ForegroundColor Yellow
if (!(Test-APIHealth)) {
    Write-Host "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∑–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ—Å—Ç" -ForegroundColor Red
    exit 1
}

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π
Write-Host "üì¶ –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π..." -ForegroundColor Yellow
$models = Get-Models

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–æ–¥–µ–ª–∏
$testModels = @("llama2", "llama2:7b", "llama2:13b", "llama2:70b", "llama3", "llama3:8b", "llama3:70b")

foreach ($model in $testModels) {
    Write-Host "=" * 50
    Write-Host "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å: $model" -ForegroundColor Magenta
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –º–æ–¥–µ–ª—å
    if ($models -contains $model) {
        Write-Host "‚úÖ –ú–æ–¥–µ–ª—å $model —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞" -ForegroundColor Green
    } else {
        Write-Host "üì• –ú–æ–¥–µ–ª—å $model –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..." -ForegroundColor Yellow
        if (!(Install-Model -ModelName $model)) {
            Write-Host "‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –º–æ–¥–µ–ª—å $model –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏" -ForegroundColor Yellow
            continue
        }
    }
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–µ–∫—Å—Ç–∞
    $testPrompt = "–ü—Ä–∏–≤–µ—Ç! –†–∞—Å—Å–∫–∞–∂–∏ –∫—Ä–∞—Ç–∫–æ –æ —Ç–æ–º, —á—Ç–æ —Ç–∞–∫–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç."
    $result = Process-Text -Prompt $testPrompt -ModelName $model
    
    if ($result) {
        Write-Host "‚úÖ –¢–µ—Å—Ç –º–æ–¥–µ–ª–∏ $model –ø—Ä–æ—à–µ–ª —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –¢–µ—Å—Ç –º–æ–¥–µ–ª–∏ $model –Ω–µ –ø—Ä–æ—à–µ–ª" -ForegroundColor Red
    }
    
    # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    Start-Sleep -Seconds 2
}

Write-Host "=" * 50
Write-Host "üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!" -ForegroundColor Green
Write-Host "üìä –ò—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π:" -ForegroundColor Yellow
Get-Models
