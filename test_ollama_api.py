#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Ollama Processing API
"""

import requests
import json
from datetime import datetime

def test_ollama_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Ollama API"""
    
    base_url = "http://localhost:8004"
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Ollama Processing API")
    print("=" * 50)
    
    # –¢–µ—Å—Ç 1: –¢–æ–ª—å–∫–æ –ø—Ä–æ–º–ø—Ç –±–µ–∑ –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    print("\n1Ô∏è‚É£ –¢–µ—Å—Ç: –¢–æ–ª—å–∫–æ –ø—Ä–æ–º–ø—Ç")
    try:
        response = requests.post(
            f"{base_url}/process-json",
            data={
                "prompt": "–†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –æ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞—Ö –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –º–∏—Ä–µ",
                "task_id": f"test-only-prompt-{datetime.now().strftime('%Y%m%d-%H%M%S')}",
                "model_name": "llama2",
                "use_openai": "false"
            },
            timeout=60
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ!")
            print(f"   –°—Ç–∞—Ç—É—Å: {result['status']}")
            print(f"   –ú–æ–¥–µ–ª—å: {result['model']}")
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç (–Ω–∞—á–∞–ª–æ): {result['result'][:100]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–º–ø—Ç —Å –≤—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    print("\n2Ô∏è‚É£ –¢–µ—Å—Ç: –ü—Ä–æ–º–ø—Ç —Å –≤—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏")
    try:
        test_data = {
            "title": "–¢–µ—Å—Ç–æ–≤–∞—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è",
            "content": "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã API.",
            "author": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–≤—Ç–æ—Ä"
        }
        
        response = requests.post(
            f"{base_url}/process-json",
            data={
                "prompt": "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç—É –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –∏ —Å–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ —Ä–µ–∑—é–º–µ",
                "data": json.dumps(test_data),
                "task_id": f"test-with-data-{datetime.now().strftime('%Y%m%d-%H%M%S')}",
                "model_name": "llama2",
                "use_openai": "false"
            },
            timeout=60
        )
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ!")
            print(f"   –°—Ç–∞—Ç—É—Å: {result['status']}")
            print(f"   –ú–æ–¥–µ–ª—å: {result['model']}")
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç (–Ω–∞—á–∞–ª–æ): {result['result'][:100]}...")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
    print("\n3Ô∏è‚É£ –¢–µ—Å—Ç: Health check")
    try:
        response = requests.get(f"{base_url}/health", timeout=10)
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"   –°—Ç–∞—Ç—É—Å: {result['status']}")
            print(f"   –°–µ—Ä–≤–∏—Å: {result['service']}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ Ollama
    print("\n4Ô∏è‚É£ –¢–µ—Å—Ç: –°—Ç–∞—Ç—É—Å Ollama")
    try:
        response = requests.get(f"{base_url}/ollama-status", timeout=10)
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ Ollama —Å—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω!")
            print(f"   –°—Ç–∞—Ç—É—Å: {result['status']}")
            print(f"   –•–æ—Å—Ç: {result['host']}")
            print(f"   –ú–æ–¥–µ–ª–µ–π: {result.get('model_count', 'N/A')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    test_ollama_api()
